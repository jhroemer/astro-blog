---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import "../styles/global.css";
import type { CollectionEntry } from "astro:content";

const allPosts = await getCollection("posts");
const pageTitle = "Blog";

const postsByYear = allPosts
  .filter((post) => !post.data.draft)
  // Sort descending
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .reduce(
    (acc, post) => {
      const year = post.data.pubDate.getFullYear();
      if (!acc[year]) {
        acc[year] = [];
      }
      acc[year].push(post);
      return acc;
    },
    {} as Record<number, CollectionEntry<"posts">[]>
  );

// console.log("postsByYear", Object.keys(postsByYear));

console.log("hey man: ", Object.entries(postsByYear)[0]);
---

<style>
  ul {
    list-style-type: none;
    padding: 0;
  }

  li {
    margin-bottom: 0.6rem;
  }

  div {
    font-size: 0.8rem;
  }
</style>

<BaseLayout pageTitle={pageTitle}>
  <h4>Writing</h4>
  <ul>
    {console.log({ postsByYear })}
    {
      Object.entries(postsByYear).map(([key, value]) => {
        console.log("value is: ", value);
        return (
          <div>
            {key}
            {value.map((hey) => {
              return <p>{hey.data.title}</p>;
            })}
          </div>
        );
      })
    }

    <hr />

    {
      allPosts
        .filter((post) => !post.data.draft)
        .sort((a, b) => {
          return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
        })
        .map((post) => {
          return (
            <li>
              <a href={`/posts/${post.slug}`}>{post.data.title}</a>
              <div>
                {post.data.pubDate.toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "short",
                  day: "2-digit",
                })}
              </div>
            </li>
          );
        })
    }
  </ul>
</BaseLayout>
