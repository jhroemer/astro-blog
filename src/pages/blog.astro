---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import BaseLayout from "../layouts/BaseLayout.astro";
import "../styles/global.css";

const allPosts = await getCollection("posts");
const pageTitle = "Blog";

const postsByYear = allPosts
  .filter((post) => !post.data.draft)
  // TODO: Sort descending
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .reduce(
    (acc, post) => {
      const year = post.data.pubDate.getFullYear();
      if (!acc[year]) {
        acc[year] = [];
      }
      acc[year].push(post);
      return acc;
    },
    {} as Record<number, CollectionEntry<"posts">[]>
  );
---

<style>
  .year-container {
    display: flex;
    flex-direction: column;
    position: relative;
    gap: 8px;
    padding-bottom: 16px;
  }

  .year {
    position: absolute;
    margin: 0;
  }

  .post-container {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 16px;

    p {
      margin: 0;
    }
  }
</style>

<BaseLayout pageTitle={pageTitle}>
  <h4>Blog posts</h4>
  {
    Object.entries(postsByYear).map(([year, posts]) => {
      return (
        <div class="year-container">
          <p class="year">{year}</p>
          {posts.map((post) => {
            return (
              <div class="post-container">
                {/* TODO: more subtle color/size */}
                {/* TODO: render tags? */}
                {/* {post.data.tags.map((tag) => (
                  <span>{tag}</span>
                  ))} */}
                <a href={`/posts/${post.slug}`}>{post.data.title}</a>
                <p>
                  {post.data.pubDate.toLocaleDateString("en-GB", {
                    month: "2-digit",
                    day: "2-digit",
                  })}
                </p>
              </div>
            );
          })}
        </div>
      );
    })
  }
</BaseLayout>
